{{- if eq .Values.deployment.type "deployment" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.global.namespace | default .Values.namespace }}-{{ .Values.global.env | default .Values.env }}
  name: {{ include "helm-common.fullname" . }}
  labels:
    {{- include "helm-common.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "helm-common.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "helm-common.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "helm-common.fullname" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: 60
      containers:
        - name: {{ include "helm-common.fullname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: {{ .Values.service.name }}
              containerPort: {{ .Values.service.port }}
              protocol: {{ .Values.service.protocol }}
          livenessProbe:
            {{ .Values.livenessProbe.type }}:
              {{- if eq .Values.livenessProbe.type "httpGet" }}
              path: {{ .Values.livenessProbe.path }}
              {{- end }}
              port: {{ .Values.service.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          readinessProbe:
            {{ .Values.readinessProbe.type }}:
              {{- if eq .Values.readinessProbe.type "httpGet" }}
              path: {{ .Values.readinessProbe.path }}
              {{- end }}
              port: {{ .Values.service.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or .Values.variables .Values.flags .Values.secrets }}
          env:
            {{- with .Values.flags }}
              {{- toYaml . | nindent 10 }}
            {{- end }}
            {{- if .Values.variables }}
              {{- include "helm-common.variables" . | trim | nindent 10 }}
            {{- end }}
            {{- if .Values.secrets }}
              {{- include "helm-common.secrets" . | trim | nindent 10 }}
            {{- end }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        {{- include "helm-common.affinity" . }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}